{
  "name": "links",
  "publisher": "james-broadhurst",
  "repository": {
    "type":"git",
    "url":"https://github.com/jameBroa/LinksLSP"
  },
  "license":"MIT",
  "displayName": "links-lang-lsp",
  "description": "LSP for the Links programming language",
  "version": "1.1.1",
  "engines": {
    "vscode": "^1.94.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:links",
    "onCommand:extension.commandName"
  ],
  "main": "./dist/client/src/extension.js",
  "contributes": {
    "configuration":{
      "type": "object",
      "title": "Links Language Server",
      "properties": {
        "links.ocamlServerPath": {
          "type":"string",
          "default": "",
          "description": "Path to the LinksParser server executable"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id":"linksDatabase",
          "title": "Links DB",
          "icon":"./icons/links-logo.svg"
        }
      ]
    },
    "views": {
      "linksDatabase": [
        {
          "id":"linksDatabaseView",
          "name": "Database setup",
          "type":"webview"
        }
      ]
    },
    "languages": [
      {
        "id": "links",
        "aliases": [
          "Links",
          "links-lang"
        ],
        "extensions": [
          ".links"
        ],
        "configuration": "./language-configuration.json",
        "icon": {
          "light":"./icons/links-logo.svg",
          "dark":"./icons/links-logo.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "links",
        "scopeName": "source.links",
        "path": "./syntaxes/links.tmLanguage.json",
        "embeddedLanguages": {
            "meta.embedded.html": "html"
          }
      }
    ],
    "commands": [
      {
        "command": "extension.executeFile",
        "title": "Execute Links File",
        "icon": "$(play)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "extension.executeFile",
          "when":"resourceLangId == links",
          "group":"navigation"
        }
      ]
    },
    "themes": [
      {
        "label": "Links Dark",
        "uiTheme": "vs-dark",
        "path": "./theming/links-dark.json"
      }
    ],

    "semanticTokenTypes": [
      { 
        "id": "variable",
        "description": "Links Variables"
      },
      {
        "id":"variableUnused",
        "description": "Links Variables (Unused)"
      },
      {
        "id":"number",
        "description": "Links numbers (Constants)"
      },
      {
        "id":"xml",
        "description": "Links XML"
      },
      {
        "id":"xmlTag",
        "description": "Links XML Tag"
      },
      {
        "id":"xmlAttribute",
        "description": "Links XML Attribute"
      },
      {
        "id":"string",
        "description": "Links Strings"
      },
      {
        "id":"projections",
        "description": "Links Projections"
      },
      {
        "id":"usedFunction",
        "description":"Links functions"
      },
      {
        "id":"unusedFunction",
        "description": "Links Unused Function"
      },
      {
        "id":"functionCall",
        "description": "Links Function Call"
      },
      {
        "id":"variant",
        "description": "Links Variant"
      },
      {
        "id":"xmlText",
        "description": "Links XML Text"
      }
    ],
    "semanticTokenScopes": [
      {
        "language": "links",
        "scopes": {
          "variable": [
            "variable.used.links"
          ],
          "variableUnused": [
            "variable.unused.links"
          ],
          "number": [
            "number.links"
          ],
          "xml":[
            "xml.links"
          ],
          "xmlTag":[
            "xmlTag.links"
          ],
          "xmlAttribute":[
            "xmlAttribute.links"
          ],
          "string":[
            "string.links"
          ],
          "projections":[
            "projections.links"
          ],
          "usedFunction":[
            "usedFunction.links"
          ],
          "unusedFunction":[
            "unusedFunction.links"
          ],
          "functionCall":[
            "functionCall.links"
          ],
          "variant":[
            "variant.links"
          ],
          "xmlText":[
            "xmlText.links"
          ]
          
        }
      }
    ],
    "configurationDefaults": {
      "[links]": {
        "editor.semanticTokenColorCustomizations": {
          "rules": {
            "variable": "#9cdcfe",
            "variable.unused": "#739DB3",
            "function": "#DCDCAA",
            "function.call": "#DCDCAA"
          }
        }
      }
    },
    "colors": [
      {
        "id":"variable.used.links",
        "description": "Color for Links variables",
        "defaults": {
          "dark": "#9cdcfe",
          "light":"#0000ff",
          "highContrast":"#9cdcfe"
        }
      },
      {
        "id":"variable.unused.links",
        "description":"Color for Links variable if unused",
        "defaults":{
          "dark":"#739DB3",
          "light":"#739DB3",
          "highContrast":"#739DB3"
        }
      },
      {
        "id":"usedFunction.links",
        "description":"Color for Links functions",
        "defaults":{
          "dark":"#DCDCAA",
          "light":"#DCDCAA",
          "highContrast":"#DCDCAA"
        }
      },
      {
        "id":"functionCall.links",
        "description":"Color for Links function calls",
        "defaults":{
          "dark":"#DCDCAA",
          "light":"#DCDCAA",
          "highContrast":"#DCDCAA"
        }
      },
      {
        "id":"keyword.control.links",
        "description":"Color for Links keywords",
        "defaults":{
          "dark":"#569CD6",
          "light":"#569CD6",
          "highContrast":"#569CD6"
        }
      },
      {
        "id":"support.type.links",
        "description":"Color for Links support types",
        "defaults":{
          "dark":"#4EC9B0",
          "light":"#4EC9B0",
          "highContrast":"#4EC9B0"
        }
      },
      {
        "id":"comment.line.pound.links",
        "description":"Color for Links comments",
        "defaults":{
          "dark":"#6A9955",
          "light":"#6A9955",
          "highContrast":"#6A9955"
        }
      },
      {
        "id":"statement.end.links",
        "description":"Color for Links statement ends",
        "defaults":{
          "dark":"#D4D4D4",
          "light":"#D4D4D4",
          "highContrast":"#D4D4D4"
        }
      },
      {
        "id":"string.quoted.double.links",
        "description":"Color for Links strings",
        "defaults":{
          "dark":"#CE9178",
          "light":"#6A9955",
          "highContrast":"#CE9178"
        }
      },
      {
        "id":"number.links",
        "description":"Color for Links numbers",
        "defaults":{
          "dark":"#B5CEA8",
          "light":"#B5CEA8",
          "highContrast":"#B5CEA8"
        }
      },
      {
        "id":"xmlAttribute.links",
        "description":"Color for Links XML attributes",
        "defaults":{
          "dark":"#569CD6",
          "light":"#569CD6",
          "highContrast":"#569CD6"
        }
      },
      {
        "id":"xml.links",
        "description":"Color for Links XML",
        "defaults":{
          "dark":"#BA6D6C",
          "light":"#BA6D6C",
          "highContrast":"#BA6D6C"
        }
      },
      {
        "id":"xmlTag.links",
        "description":"Color for Links XML tags",
        "defaults":{
          "dark":"#808080",
          "light":"#808080",
          "highContrast":"#808080"
        }
      },
      {
        "id":"keyword.xml.defaults.links",
        "description":"Color for Links XML keywords",
        "defaults":{
          "dark":"#569CD6",
          "light":"#569CD6",
          "highContrast":"#569CD6"
        }
      },
      {
        "id":"string.links",
        "description":"Color for Links strings",
        "defaults":{
          "dark":"#CE9178",
          "light":"#CE9178",
          "highContrast":"#CE9178"
        }
      },
      {
        "id":"projections.links",
        "description":"Color for Links projections",
        "defaults":{
          "dark":"#61AFEF",
          "light":"#61AFEF",
          "highContrast":"#61AFEF"
        }
      },
      {
        "id":"unusedFunction.links",
        "description":"Color for Links unused functions",
        "defaults":{
          "dark":"#9a9e82",
          "light":"#9a9e82",
          "highContrast":"#9a9e82"
        }
      },
      {
        "id":"variant.links",
        "description":"Color for Links variants",
        "defaults":{
          "dark":"#67ad66",
          "light":"#67ad66",
          "highContrast":"#67ad66"
        }
      },
      {
        "id":"xmlText.links",
        "description":"Color for Links XML text",
        "defaults":{
          "dark":"#D4D4D4",
          "light":"#D4D4D4",
          "highContrast":"#D4D4D4"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint server/src && eslint client/src",
    "test": "vscode-test"
 },
  "devDependencies": {
    "@types/mocha": "^10.0.8",
    "@types/node": "20.x",
    "@types/vscode": "^1.94.0",
    "@typescript-eslint/eslint-plugin": "^8.8.1",
    "@typescript-eslint/parser": "^8.8.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.24.0",
    "eslint": "^9.11.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.6.2"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1"
  }
}
